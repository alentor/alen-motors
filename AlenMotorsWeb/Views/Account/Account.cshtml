@model alenMotorsWeb.Models.AccountViewModel

@{
    ViewBag.Title = "Alen Motors - Acccount";
}

@section script{
    <script>
        $(function() {
            $('#BirthDatePicker').datetimepicker({
                useCurrent: false, //Important! See issue #1075
                format: 'DD/MM/YYYY',
                widgetPositioning: {
                    horizontal: 'left',
                    vertical: 'bottom'
                }
            });
        });
    </script>
}

<div class="row mainRow text-center">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <br/>
        @Html.ActionLink("View my Orders", "ViewOrders", "Order", null, new {@class = "btn btn-default btnMain"})
        <br/>
        @using (Html.BeginForm("Account", "Account", new {ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post, new {@class = "form-horizontal", role = "form"})) {
            @Html.AntiForgeryToken()
            <h1>Account</h1>
            <hr/>

            <div class="form-group">
                @Html.Label("Email", new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @*@Html.EditorFor(User => User., new { htmlAttributes = new { @class = "form-control input-sm" } })*@
                    @Html.TextBox("email", User.Identity.Name, new {@class = "form-control input-sm", @id = "disabledInput", @disabled = "disabled"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control input-sm"}})
                    @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NewPassword, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @Html.EditorFor(model => model.NewPassword, new {htmlAttributes = new {@class = "form-control input-sm"}})
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmNewPassword, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @Html.EditorFor(model => model.ConfirmNewPassword, new {htmlAttributes = new {@class = "form-control input-sm"}})
                    @Html.ValidationMessageFor(model => model.ConfirmNewPassword, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control input-sm"}})
                    @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control input-sm"}})
                    @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BirthDate, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.BirthDate, new {@id = "BirthDatePicker", @class = "form-control input-sm text-center", @*placeholder = "25/03/1991"*@})
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @{
                        List <SelectListItem> list = new List <SelectListItem>() {new SelectListItem() {Value = "Female", Text = "Female"}, new SelectListItem() {Value = "Male", Text = "Male"},};
                    }
                    @Html.DropDownListFor(model => model.Gender, list, new {@class = "form-control input-sm text-center"})
                    @Html.ValidationMessageFor(model => model.Gender, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control input-sm"}})
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-9">
                    <input type="submit" value="Save" class="btn btn-default btnMain"/>
                </div>
            </div>
        }
    </div>
</div>