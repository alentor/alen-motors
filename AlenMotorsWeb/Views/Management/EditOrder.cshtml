@model alenMotorsWeb.Models.EditOrderViewModel

@{
    ViewBag.Title = "Alen Motors - Edit Order";
}

@section script{
    <script>
        $(function() {
            $('#datetimepicker6').datetimepicker({
                useCurrent: false, //Important! See issue #1075
                format: 'DD/MM/YYYY',
                widgetPositioning: {
                    horizontal: 'left',
                    vertical: 'bottom'
                }
            });
            $('#datetimepicker7').datetimepicker({
                useCurrent: false, //Important! See issue #1075
                format: 'DD/MM/YYYY',
                widgetPositioning: {
                    vertical: 'bottom'
                }
            });
            $("#datetimepicker6").on("dp.change", function(e) {
                $('#datetimepicker7').data("DateTimePicker").minDate(e.date);
            });
            $("#datetimepicker7").on("dp.change", function(e) {
                $('#datetimepicker6').data("DateTimePicker").maxDate(e.date);
            });

        });
    </script>
}


<div class="row mainRow text-center">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        @using (Html.BeginForm("EditOrder", "Management", new {ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post, new {@class = "form-horizontal", role = "form"})) {
            @Html.AntiForgeryToken()
            <h1>Edit Order</h1>

            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})

            <div class="form-group">
                @Html.LabelFor(model => model.OrderID, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.OrderID, new {@class = "form-control input-sm text-center disabled", @id = "disabledInput", @readonly = "readonly"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control input-sm"}})
                    @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">

                    @Html.TextBoxFor(model => model.StartDate, new {@id = "datetimepicker6", @class = "form-control input-sm text-center"})
                    @Html.ValidationMessageFor(model => model.StartDate, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">

                    @Html.TextBoxFor(model => model.EndDate, new {@id = "datetimepicker7", @class = "form-control input-sm text-center"})
                    @Html.ValidationMessageFor(model => model.EndDate, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StatusStr, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @{
                        List <SelectListItem> list = new List <SelectListItem>() {new SelectListItem() {Value = "Closed", Text = "Closed" }, new SelectListItem() {Value = "Opened", Text = "Opened" },};
                    }
                    @Html.DropDownListFor(model => model.StatusStr, list, "", new {@class = "form-control input-sm text-center"})
                    @Html.ValidationMessageFor(model => model.StatusStr, "", new {@class = "text-danger"})
                </div>
            </div>


            @*<div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-5">
                    @{
                        List<SelectListItem> list = new List<SelectListItem>() { new SelectListItem() { Value = "Female", Text = "Female" }, new SelectListItem() { Value = "Male", Text = "Male" }, };
                    }
                    @Html.DropDownListFor(model => model.Gender, list, new { @class = "form-control input-sm text-center" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>*@


            <div class="form-group">
                <div class="col-md-offset-2 col-md-9">
                    <input type="submit" value="Edit" class="btn btn-default btnMain"/>
                    <br/>
                    <br/>
                    @Html.ActionLink("Back to List", "ViewAllOrders", "Management")
                </div>
            </div>
        }
    </div>
    <div class="col-md-3"></div>
</div>