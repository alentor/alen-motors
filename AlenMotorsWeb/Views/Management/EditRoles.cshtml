@model alenMotorsWeb.Models.ManagementEditRolesViewModel

@{
    ViewBag.Title = "Alen Motors - Edit Role";
}

<div class="row mainRow text-center">

    <h4>Edit Roles for [@Model.Email]</h4>
    <h5>The user already in rules: @Model.Roles</h5>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="col-md-6">
        @using (Html.BeginForm("AddRoleToUser", "Management", new {ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post, new {@class = "form-horizontal", role = "form"})) {
            @Html.AntiForgeryToken()
            @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control input-sm hidden", @readonly = "readonly"}})

            <hr/>
            <div class="form-group">
                @Html.LabelFor(model => model.RoleToAdd, htmlAttributes:new {@class = "control-label col-md-4"})
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.RoleToAdd, Model.RoleList, "", new {@class = "form-control input-sm text-center"})
                    @Html.ValidationMessageFor(model => model.RoleToAdd, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-9">
                    <input type="submit" value="Add Role" class="btn btn-default btnMain"/>
                </div>
            </div>
        }
    </div>

    <div class="col-md-6">
        @using (Html.BeginForm("RemoveRoleFromUser", "Management", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input-sm hidden", @readonly = "readonly" } })

            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.RoleToRemove, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-5">
                    @Html.DropDownListFor(model => model.RoleToRemove, Model.RoleListUser, "", new { @class = "form-control input-sm text-center" })
                    @Html.ValidationMessageFor(model => model.RoleToRemove, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-9">
                    <input type="submit" value="Remove Role" class="btn btn-default btnMain" />
                </div>
            </div>
        }
    </div>
</div>